/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.76
 * Generated at: 2023-07-04 14:19:22 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>KBO BOARD</title>\r\n");
      out.write("<style type=\"text/css\">\r\n");
      out.write("	html, body{\r\n");
      out.write("		width: 100%;\r\n");
      out.write("		height: 100%;\r\n");
      out.write("		margin: 0;\r\n");
      out.write("	}\r\n");
      out.write("	header{\r\n");
      out.write("		width: 100%;\r\n");
      out.write("		height: 10%;\r\n");
      out.write("		background-color: black;\r\n");
      out.write("	}\r\n");
      out.write("	main{\r\n");
      out.write("		padding-left: 10%;\r\n");
      out.write("		padding-right: 10%;\r\n");
      out.write("		padding-bottom:10%;\r\n");
      out.write("		text-align: center;\r\n");
      out.write("	}\r\n");
      out.write("	.logobox{\r\n");
      out.write("		width:10%;\r\n");
      out.write("		margin-left: auto;\r\n");
      out.write("		margin-right: auto;\r\n");
      out.write("		margin-top: auto;\r\n");
      out.write("		margin-bottom: auto;\r\n");
      out.write("		text-align: center;\r\n");
      out.write("	}\r\n");
      out.write("	.logo{\r\n");
      out.write("		color: white;\r\n");
      out.write("		font-size: 50px;\r\n");
      out.write("		text-decoration: none;\r\n");
      out.write("	}\r\n");
      out.write("	.box{\r\n");
      out.write("		width: 200px;\r\n");
      out.write("		height: 200px; \r\n");
      out.write("		text-align: center;\r\n");
      out.write("		margin-left: auto;\r\n");
      out.write("		margin-right: auto;\r\n");
      out.write("		margin-bottom: 5%;\r\n");
      out.write("	}\r\n");
      out.write("	.teamlogolist{\r\n");
      out.write("		margin: 5%;\r\n");
      out.write("		display: flex;\r\n");
      out.write("	}\r\n");
      out.write("	.teamlogo{\r\n");
      out.write("		margin: 5%;\r\n");
      out.write("		text-decoration: none;\r\n");
      out.write("		color: black;\r\n");
      out.write("	}\r\n");
      out.write("	.emblem{\r\n");
      out.write("		width: 100%;\r\n");
      out.write("		height: 100%;\r\n");
      out.write("	}\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	<header>\r\n");
      out.write("		<div class=\"logobox\">\r\n");
      out.write("			<a href=\"/\" class=\"logo\">HOME</a>\r\n");
      out.write("		</div>\r\n");
      out.write("	</header>\r\n");
      out.write("	<main>\r\n");
      out.write("		<div class=\"teamlogolist\">\r\n");
      out.write("			<div class=\"box\">\r\n");
      out.write("				<a href=\"/kbo/doosan/info\" class=\"teamlogo\">\r\n");
      out.write("				<img src=\"https://i.namu.wiki/i/NuVR7neFequ12CKait0llyWiCG7cIJ0Nmjt1_VGzg4ZqoAduVyLpogESXePJb94T07idc3dC8_458e_dPTrQ6w.svg\" class=\"emblem\">DOOSAN</a>\r\n");
      out.write("			</div>\r\n");
      out.write("			<div class=\"box\">\r\n");
      out.write("				<a href=\"/kbo/hanwha/info\" class=\"teamlogo\">\r\n");
      out.write("				<img alt=\"\" src=\"https://i.namu.wiki/i/28S4R3aOBxEWMdQB-hhvbpMnmEYQGw7wSpS8aZQ_bdwH61Y-IqX8Zkot9nBVjjty7U5spvDhD9tRC5vqOOUMEA.svg\" class=\"emblem\">HANWHA</a>\r\n");
      out.write("			</div>\r\n");
      out.write("			<div class=\"box\">\r\n");
      out.write("				<a href=\"/kbo/kia/info\" class=\"teamlogo\">\r\n");
      out.write("				<img alt=\"\" src=\"https://upload.wikimedia.org/wikipedia/ko/e/e3/Kia_Tigers_emblem_%282021%29.jpg\" class=\"emblem\">KIA</a>\r\n");
      out.write("			</div>\r\n");
      out.write("			<div class=\"box\">\r\n");
      out.write("				<a href=\"/kbo/kiwoom/info\" class=\"teamlogo\">\r\n");
      out.write("				<img alt=\"\" src=\"https://i.namu.wiki/i/i0qhQjUqhPst7K_uUfnRJSMSArHuzEvH4aYK01Si3M7YW_ow2jvRbXNzcWGMl7P6QpFZMeyl4t5ayF27mAqLMA.svg\" class=\"emblem\">KIWOOM</a>\r\n");
      out.write("			</div>\r\n");
      out.write("			<div class=\"box\">\r\n");
      out.write("				<a href=\"/kbo/kt/info\" class=\"teamlogo\">\r\n");
      out.write("				<img alt=\"\" src=\"https://i.namu.wiki/i/1I_O46xxWGvTC-arPbfuBwaYgmd0I9gOCfTSchy5Hf5zZ-blf38j7boUFED_abbT5R8Qsj_Ynb-b7x4zxPk4HQ.svg\" class=\"emblem\">KT</a>\r\n");
      out.write("			</div>\r\n");
      out.write("		</div> \r\n");
      out.write("		<div class=\"teamlogolist\">\r\n");
      out.write("			<div class=\"box\">\r\n");
      out.write("				<a href=\"/kbo/lg/info\" class=\"teamlogo\">\r\n");
      out.write("				<img alt=\"\" src=\"https://i.namu.wiki/i/BubuDg3tY_403suvO3dbCx3I15gk6f1mPVWPE-_qhQp8qV07IaE1S25nWjANcbdZ6n26lbO-oKJd4bZ8fUWFRA.svg\" class=\"emblem\">LG</a>\r\n");
      out.write("			</div>\r\n");
      out.write("			<div class=\"box\">\r\n");
      out.write("				<a href=\"/kbo/lotte/info\" class=\"teamlogo\">\r\n");
      out.write("				<img alt=\"\" src=\"https://blog.kakaocdn.net/dn/ANVeX/btqynaIRq53/8xc9KZyXeJqIWbLrCBGjB1/img.jpg\" class=\"emblem\">LOTTE</a>\r\n");
      out.write("			</div>\r\n");
      out.write("			<div class=\"box\">\r\n");
      out.write("				<a href=\"/kbo/nc/info\" class=\"teamlogo\">\r\n");
      out.write("				<img alt=\"\" src=\"https://i.namu.wiki/i/TN9uwwJvhPk8q26pyOdozaBVNM3uYALhc1BBwGcss1Qyi76fOjNiyeaUuz_4s1INrl5j6KRqDE4rW0gfYSiR6g.svg\" class=\"emblem\">NC</a>\r\n");
      out.write("			</div>\r\n");
      out.write("			<div class=\"box\">\r\n");
      out.write("				<a href=\"/kbo/samsung/info\" class=\"teamlogo\">\r\n");
      out.write("				<img alt=\"\" src=\"https://i.namu.wiki/i/2aaR7lMDzjHY9SCIJXgSgeo8L742wE8FttOK8mAqJ1iuMVWKKl3SFFKVHIvMQDgmIUfvxvVc2YDrmbwTeUSz0g.svg\" class=\"emblem\">SAMSUNG</a>\r\n");
      out.write("			</div>\r\n");
      out.write("			<div class=\"box\">\r\n");
      out.write("				<a href=\"/kbo/ssg/info\" class=\"teamlogo\">\r\n");
      out.write("				<img alt=\"\" src=\"https://i.namu.wiki/i/2HFmHNI5SdyOJzDLAVtvxW7ZKkHT-vGBXIVpwLnsumhcNhT1-aHDJ-gIdx7BqhTx2jarDlRa_AuzAkYkCKblEA.svg\" class=\"emblem\">SSG</a>\r\n");
      out.write("			</div>\r\n");
      out.write("		</div>\r\n");
      out.write("		\r\n");
      out.write("		\r\n");
      out.write("		\r\n");
      out.write("		<div><a href=\"/board/list\">게시판</a></div> \r\n");
      out.write("	 </main>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
